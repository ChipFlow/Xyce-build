name: Build Xyce on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_run:
    workflows: ["xyce-trigger"]
    types: [completed]

  workflow_dispatch:

jobs:
  build:
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' || github.event_name == 'pull_request'
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MPI toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest MPI toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest MPI compiler toolchain on the default runner image, default generator>

      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        os: [ubuntu-latest-large, windows-latest-large, macos-latest-large]

    steps:
    - run: git config --global core.autocrlf false

    - uses: actions/checkout@v4

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2

    - name: Cache Sources
      id: cache-sources
      uses: actions/cache@v4
      with:
        path: _source
        key: ${{ runner.os }}-sources

    - name: Install MSYS2 dependencies
      uses: msys2/setup-msys2@v2
      if: contains(matrix.os, 'windows-latest')
      with:
        msystem: UCRT64
        update: false
        release: false
        cache: true
        install: |
          autotools
          git
          bison
          flex
          mingw-w64-ucrt-x86_64-toolchain
          mingw-w64-ucrt-x86_64-autotools
          mingw-w64-ucrt-x86_64-gcc
          mingw-w64-ucrt-x86_64-cmake
          mingw-w64-ucrt-x86_64-make
          mingw-w64-ucrt-x86_64-msmpi
          mingw-w64-ucrt-x86_64-openblas64
          mingw-w64-ucrt-x86_64-lapack64
          mingw-w64-ucrt-x86_64-fftw
          mingw-w64-ucrt-x86_64-suitesparse
          mingw-w64-ucrt-x86_64-msmpi
          mingw-w64-ucrt-x86_64-boost
          mingw-w64-ucrt-x86_64-boost-libs
          mingw-w64-ucrt-x86_64-python-numpy
          mingw-w64-ucrt-x86_64-python

    - name: Build for Windows (${{ matrix.os }})
      if: contains(matrix.os, 'windows-latest')
      shell: msys2 {0}
      run: ./build.sh

    - name: Build for Unix-like (${{ matrix.os }})
      if: ! contains(matrix.os, 'windows-latest')
      shell: bash
      run: ./build.sh

    - name: Upload installation as artifact
      uses: actions/upload-artifact@v4
      with:
        name: xyce-${{ matrix.os }}
        path: _install


